version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: haghighi_postgres_prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-haghighi_db}
      POSTGRES_USER: ${POSTGRES_USER:-haghighi_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-haghighiPassword}
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - haghighi_network_prod
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: haghighi_backend_prod
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-haghighi_user}:${POSTGRES_PASSWORD:-haghighiPassword}@postgres:5432/${POSTGRES_DB:-haghighi_db}?schema=public"
      JWT_SECRET: ${JWT_SECRET:-your-super-secure-jwt-secret-key-change-this-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      API_BASE_URL: ${API_BASE_URL:-http://YOUR_SERVER_IP:3000}
      PORT: ${PORT:-3000}
      NODE_ENV: ${NODE_ENV:-production}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      UPLOAD_PATH: ${UPLOAD_PATH:-/app/uploads}
      HOST: ${HOST:-0.0.0.0}
    depends_on:
      - postgres
    volumes:
      - ./uploads:/app/uploads
    ports:
      - "3000:3000"
    networks:
      - haghighi_network_prod
    restart: unless-stopped

  admin-panel:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile.prod
    container_name: haghighi_admin_prod
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://YOUR_SERVER_IP:3000}
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - haghighi_network_prod
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: haghighi_frontend_prod
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://YOUR_SERVER_IP:3000}
    ports:
      - "3002:80"
    depends_on:
      - backend
    networks:
      - haghighi_network_prod
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: haghighi_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./uploads:/var/www/uploads
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
      - admin-panel
    networks:
      - haghighi_network_prod
    restart: unless-stopped

volumes:
  postgres_data_prod:

networks:
  haghighi_network_prod:
    driver: bridge
